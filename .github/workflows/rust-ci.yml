name: CI

concurrency: ci-${{ github.ref }}

on:
    push:
        branches: [develop]
        paths:
            - "src/**/*.rs"
            - .rust-version
    workflow_dispatch:
    repository_dispatch:
        types:
            - common-published

jobs:
    tests:
        name: Build/test on ${{ matrix.name }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: Linux
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-musl
                    # - build: macos
                    #   os: macos-latest
                    #   target: x86_64-apple-darwin

        steps:
          - uses: actions/checkout@v4
          - name: Get language version
            id: get_lang_version
            run: |
                  v=$(cat .rust-version)
                  echo "lang_version=$v" >> $GITHUB_OUTPUT
          - name: Install Rust
            uses: dtolnay/rust-toolchain@stable
            with:
              targets: ${{ matrix.target }}
              # rust-version: ${{ steps.get_lang_version.outputs.lang_version }}
          - name: Build
            uses: actions-rs/cargo@v1
            with:
              use-cross: true
              command: build
              args: --verbose --release --target ${{ matrix.target }}
          - name: Test
            uses: actions-rs/cargo@v1
            with:
              use-cross: true
              command: test
              args: --verbose --release --target ${{ matrix.target }}

    docs:
        needs: [tests]
        runs-on: ubuntu-latest
        concurrency: docs
        steps:
            - uses: actions/checkout@v4
            - name: Get language version
              id: get_lang_version
              run: |
                    v=$(cat .rust-version)
                    echo "lang_version=$v" >> $GITHUB_OUTPUT
            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              # with:
              #   targets: ${{ matrix.target }}
              #   rust-version: ${{ steps.get_lang_version.outputs.lang_version }}
            - name: Make docs
              run: |
                    cargo doc
            - name: Publish docs
              uses: peaceiris/actions-gh-pages@v4
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                publish_dir: ./target/doc/sweetrpg_model_core/

    tag:
        needs: [tests]
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Bump version and push tag
              id: bump_version
              uses: anothrNick/github-tag-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  WITH_V: false
                  DEFAULT_BUMP: patch
            - name: Update Cargo.toml
              run: |
                    sed -i 's/^version = ".*"$/version = "'${{ steps.bump_version.outputs.new_tag }}'"/' Cargo.toml
            - name: Commit and push
              run: |
                    git config --global user.email "ci@sweetrpg.com"
                    git config --global user.name "SweetRPG CI"
                    git add Cargo.toml
                    git commit -m "Update Cargo.toml on ${{ github.ref_name }} with version: ${{ steps.bump_version.outputs.new_tag }}"
                    git push origin

    publish:
        needs: [tag]
        runs-on: ubuntu-latest
        concurrency: publish
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Publish to Crates.io
              env:
                CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_API_KEY }}
              run: |
                    cargo publish --verbose

    notify:
        needs: [tag]
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - repo: api-core.rs
                    - repo: catalog-api
                    - repo: catalog-data.rs
                    - repo: catalog-data-processor
                    - repo: catalog-objects.rs
                    - repo: catalog-web
                    - repo: client.rs
                    - repo: data-api
                    - repo: data-objects.rs
                    - repo: db.rs
                    - repo: initiative-api
                    - repo: initiative-data.rs
                    - repo: initiative-objects.rs
                    - repo: initiative-web
                    - repo: kv-api
                    - repo: kv-data.rs
                    - repo: kv-expression-processor
                    - repo: kv-key-processor
                    - repo: kv-objects.rs
                    - repo: kv-value-calculator
                    - repo: kv-web
                    - repo: library-api
                    - repo: library-data.rs
                    - repo: library-objects.rs
                    - repo: library-web
                    - repo: main-web
                    - repo: model-core.rs
                    - repo: shared-web
                    - repo: web-core.rs
        steps:
            - uses: juztcode/repo-ditpatch-action@v1
              continue-on-error: true
              with:
                event-type: model-core-published
                token: ${{ secrets.REPO_ACCESS_TOKEN }}
                repository: sweetrpg/${{ matrix.repo }}
